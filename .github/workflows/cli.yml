name: Patchup CLI

on:
  push:
    branches: 
      - master

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with: 
          profile: minimal
          toolchain: stable

      - name: Read Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --locked

      - name: Write Cache
        uses: actions/upload-artifact@master
        with:
          name: patchup-cli
          path: target/release/patchup

  package:
    name: Package
    runs-on: ubuntu-latest
    
    needs:
      - build

    outputs:
      name: ${{ steps.metadata.outputs.name }}
      version: ${{ steps.metadata.outputs.version }}
      description: ${{ steps.metadata.outputs.description }}
      license: ${{ steps.metadata.outputs.license }}
      url: ${{ steps.metadata.outputs.url }}

    steps:
      - uses: actions/checkout@v2

      - name: Read Cache
        uses: actions/download-artifact@master
        with:
          name: patchup-cli
          path: target/release/patchup

      - name: Extract Metadata
        id: metadata
        run: ./package/metadata.sh 

      - name: Create Release Archive
        run: tar -czf patchup-cli.tar.gz Cargo.lock Cargo.toml src

      - name: Create Binary Release Archive
        run: tar -czf patchup-cli-bin.tar.gz target/release/patchup

      - name: Upload Release Archive
        uses: svenstaro/upload-release-action@v2
        with: 
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: patchup-cli.tar.gz 
          tag: ${{ steps.metadata.outputs.version }}
          overwrite: true

      - name: Upload Binary Release Archive
        uses: svenstaro/upload-release-action@v2
        with: 
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: patchup-cli-bin.tar.gz 
          tag: ${{ steps.metadata.outputs.version }}
          overwrite: true
        
      - name: Create Release PKGBUILD
        run: ./package/pkgbuild.sh

      - name: Create Release Binary PKGBUILD
        run: ./package/pkgbuild.bin.sh

      - name: Publish Release to AUR
        uses: KSXGitHub/github-actions-deploy-aur@v2.2.3
        with:
          pkgname: patchup
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}

      - name: Publish Release Binary to AUR
        uses: KSXGitHub/github-actions-deploy-aur@v2.2.3
        with:
          pkgname: patchup-bin
          pkgbuild: ./PKGBUILD-BIN
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
